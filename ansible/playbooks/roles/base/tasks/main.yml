---
- name: Detect if running in Vagrant
  stat:
    path: /vagrant
  register: vagrant_dir

- name: Set is_vagrant fact if /vagrant exists
  set_fact:
    is_vagrant: true
  when: vagrant_dir.stat.exists

- name: Debug current environment
  debug:
    msg: "Running in Vagrant: {{ is_vagrant }}"

- name: Check if system is already registered
  command: subscription-manager identity
  register: rhsm_identity
  ignore_errors: true

- name: Register system with Red Hat (only if not already registered)
  command: >
    subscription-manager register
    --org {{ rhsm_org }}
    --activationkey {{ rhsm_key }}
  when: rhsm_identity.rc != 0
  ignore_errors: true

- name: Enable CodeReady Builder repo
  command: >
    subscription-manager repos --enable "codeready-builder-for-rhel-9-{{ ansible_architecture }}-rpms"
  ignore_errors: true

- name: Import EPEL GPG key
  ansible.builtin.rpm_key:
    state: present
    key: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}"

- name: Install EPEL
  ansible.builtin.dnf:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present

- name: Install base development tools
  dnf:
    name: "@Development Tools"
    state: present

- name: Install core utilities and languages
  dnf:
    name:
      - kernel-headers
      - kernel-devel
      # - dkms
      - python3-pip
      - git
      - wget
      - curl
      - zsh
      - ansible-core
      # - neovim
    state: present

- name: Ensure NVIDIA audio dependencies installed
  when: not is_vagrant | default(false)
  block:
    - name: Install kernel-modules-extra for running kernel
      ansible.builtin.dnf:
        name: "kernel-modules-extra-{{ ansible_kernel }}"
        state: present
      register: kernel_modules_extra_result
      ignore_errors: true

    - name: Install generic kernel-modules-extra package as fallback
      ansible.builtin.dnf:
        name: kernel-modules-extra
        state: present
      when: kernel_modules_extra_result is failed

- name: Load NVIDIA HDA audio modules (best effort)
  ansible.builtin.shell: |
    modprobe snd_hda_intel || true
    modprobe snd_hda_codec_hdmi || true
  when: not is_vagrant | default(false)
  changed_when: false

- name: Persist NVIDIA audio modules at boot
  ansible.builtin.copy:
    dest: /etc/modules-load.d/nvidia-audio.conf
    owner: root
    group: root
    mode: '0644'
    content: |
      snd_hda_intel
      snd_hda_codec_hdmi
  when: not is_vagrant | default(false)

# - name: Disable SELinux
#   selinux:
#     state: disabled

# - name: Ensure SELinux is permanently disabled
#   replace:
#     path: /etc/selinux/config
#     regexp: '^SELINUX=.*'
#     replace: 'SELINUX=disabled'

# - name: Install VirtualBox Guest Additions dependencies and modules
#   when: ansible_virtualization_type == "virtualbox"
#   block:

#     - name: Install dependencies for VirtualBox Guest Additions
#       dnf:
#         name:
#           - gcc
#           - make
#           - perl
#           - bzip2
#           - dkms
#           - elfutils-libelf-devel
#         state: present

#     - name: Ensure /mnt/cdrom directory exists
#       file:
#         path: /mnt/cdrom
#         state: directory

#     - name: Mount VBox Guest Additions CD (if available)
#       mount:
#         path: /mnt/cdrom
#         src: /dev/cdrom
#         fstype: iso9660
#         state: mounted
#       ignore_errors: true

#     - name: Install VirtualBox Guest Additions
#       command: sh /mnt/cdrom/VBoxLinuxAdditions.run
#       args:
#         creates: /var/log/vboxadd-setup.log
#       ignore_errors: true
