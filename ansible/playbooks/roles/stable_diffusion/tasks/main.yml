---
- name: Validate required variables
  ansible.builtin.assert:
    that:
      - sd_webui_root is defined
      - sd_webui_data_dir is defined
    fail_msg: "sd_webui_root and sd_webui_data_dir must be defined before running this role."

- name: Set defaults for sd-webui installation paths
  ansible.builtin.set_fact:
    sd_webui_models_dir: "{{ sd_webui_models_dir | default(sd_webui_data_dir + '/models') }}"

- name: Set defaults for sd-webui installation paths
  ansible.builtin.set_fact:
    sd_webui_venv: "{{ sd_webui_venv | default(sd_webui_data_dir + '/venv') }}"
    sd_webui_ckpt_dir: "{{ sd_webui_ckpt_dir | default(sd_webui_models_dir + '/Stable-diffusion') }}"
    sd_webui_vae_dir: "{{ sd_webui_vae_dir | default(sd_webui_models_dir + '/VAE') }}"
    sd_webui_lora_dir: "{{ sd_webui_lora_dir | default(sd_webui_models_dir + '/Lora') }}"
    sd_webui_embeddings_dir: "{{ sd_webui_embeddings_dir | default(sd_webui_models_dir + '/embeddings') }}"

- name: Ensure required sd-webui directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: sd-data
    group: sd-data
    mode: '0755'
  loop:
    - "{{ sd_webui_root }}"
    - "{{ sd_webui_data_dir }}"
    - "{{ sd_webui_venv }}"
    - "{{ sd_webui_ckpt_dir }}"
    - "{{ sd_webui_vae_dir }}"
    - "{{ sd_webui_lora_dir }}"
    - "{{ sd_webui_embeddings_dir }}"

- name: Add placeholder .gitkeep to model directories (optional)
  ansible.builtin.copy:
    dest: "{{ item }}/.gitkeep"
    content: ""
    owner: sd-data
    group: sd-data
    mode: '0644'
  loop:
    - "{{ sd_webui_ckpt_dir }}"
    - "{{ sd_webui_vae_dir }}"
    - "{{ sd_webui_lora_dir }}"
    - "{{ sd_webui_embeddings_dir }}"

- name: Ensure Python and Git dependencies are installed
  ansible.builtin.dnf:
    name:
      - git
      - python3
      - python3-pip
      - python3-virtualenv
    state: present

- name: Ensure local wheel cache directory exists
  ansible.builtin.file:
    path: /tmp/wheels
    state: directory
    mode: '0755'

- name: Clone AUTOMATIC1111 repository
  ansible.builtin.git:
    repo: "https://github.com/AUTOMATIC1111/stable-diffusion-webui.git"
    dest: "{{ sd_webui_root }}"
    version: master
    update: no
  become: true
  become_user: sd-data

- name: Set up Python virtual environment
  ansible.builtin.command: python3 -m venv "{{ sd_webui_venv }}"
  args:
    creates: "{{ sd_webui_venv }}/bin/activate"

- name: Check if local wheel cache exists
  ansible.builtin.stat:
    path: /tmp/wheels
  register: wheels_cache

- name: Install Python requirements (cached if available)
  ansible.builtin.pip:
    requirements: "{{ sd_webui_root }}/requirements.txt"
    virtualenv: "{{ sd_webui_venv }}"
    extra_args: "{{ '--find-links /tmp/wheels' if wheels_cache.stat.exists else omit }}"

- name: Ensure sd-webui files owned by sd-data
  ansible.builtin.file:
    path: "{{ sd_webui_root }}"
    state: directory
    recurse: yes
    owner: sd-data
    group: sd-data

- name: Ensure required Python packages are installed
  pip:
    name:
      - importlib_metadata
      - setuptools
      - wheel
    virtualenv: "{{ sd_webui_venv }}"
    virtualenv_site_packages: false

- name: Uninstall xformers
  pip:
    name: xformers
    state: absent
    executable: "{{ sd_webui_venv }}/bin/pip"

- name: Install ninja
  pip:
    name: ninja
    state: present
    executable: "{{ sd_webui_venv }}/bin/pip"

- name: Install xformers from GitHub
  pip:
    name: git+https://github.com/facebookresearch/xformers.git
    executable: "{{ sd_webui_venv }}/bin/pip"

- name: Create launch wrapper script
  ansible.builtin.copy:
    dest: "{{ sd_webui_root }}/launch.sh"
    mode: '0755'
    owner: sd-data
    group: sd-data
    content: |
      #!/bin/bash
      set -euo pipefail

      VENV="{{ sd_webui_venv }}"
      ROOT="{{ sd_webui_root }}"
      DATA="{{ sd_webui_data_dir }}"
      CKPT="{{ sd_webui_ckpt_dir }}"
      VAE="{{ sd_webui_vae_dir }}"
      LORA="{{ sd_webui_lora_dir }}"
      EMBED="{{ sd_webui_embeddings_dir }}"

      source "${VENV}/bin/activate"

      exec python3 "${ROOT}/launch.py" \
        --xformers \
        --no-half-vae \
        --listen \
        --port 7860 \
        --data-dir "${DATA}" \
        --ckpt-dir "${CKPT}" \
        --vae-dir "${VAE}" \
        --lora-dir "${LORA}" \
        --embeddings-dir "${EMBED}" \
        --skip-torch-cuda-test

- name: Ensure Stable Diffusion directories have correct ownership
  file:
    path: "{{ item }}"
    owner: sd-data
    group: sd-data
    recurse: yes
  loop:
    - "{{ sd_webui_root }}"
    - "{{ sd_webui_data_dir }}"

- name: Clone ComfyUI
  ansible.builtin.git:
    repo: https://github.com/comfyanonymous/ComfyUI.git
    dest: /home/sd-data/data/ComfyUI
    version: master
  become: true
  become_user: sd-data

- name: Install ComfyUI dependencies
  ansible.builtin.pip:
    requirements: /home/sd-data/data/ComfyUI/requirements.txt
    virtualenv: /home/sd-data/data/venv

- name: Create ComfyUI launch wrapper
  ansible.builtin.copy:
    dest: /home/sd-data/data/ComfyUI/launch.sh
    mode: '0755'
    owner: sd-data
    group: sd-data
    content: |
      #!/bin/bash
      set -euo pipefail

      VENV="${COMFY_VENV:-/home/sd-data/data/venv}"
      ROOT_DIR="${COMFY_ROOT_DIR:-/home/sd-data/data/ComfyUI}"
      LISTEN_ADDR="${COMFY_LISTEN_ADDR:-0.0.0.0}"
      PORT="${COMFY_PORT:-8188}"
      OUTPUT_DIR="${COMFY_OUTPUT_DIR:-${ROOT_DIR}/output}"
      TEMP_DIR="${COMFY_TEMP_DIR:-${ROOT_DIR}/temp}"
      INPUT_DIR="${COMFY_INPUT_DIR:-${ROOT_DIR}/input}"
      USER_DIR="${COMFY_USER_DIR:-${ROOT_DIR}/user}"

      source "${VENV}/bin/activate"
      cd "${ROOT_DIR}"

      DISPLAY_HOST="${LISTEN_ADDR}"
      if [[ "${LISTEN_ADDR}" == "0.0.0.0" ]]; then
        DISPLAY_HOST="127.0.0.1"
      fi

      echo "Starting ComfyUI on ${LISTEN_ADDR}:${PORT}"
      echo "Open http://${DISPLAY_HOST}:${PORT} in your browser."

      mkdir -p "${OUTPUT_DIR}" "${TEMP_DIR}" "${INPUT_DIR}" "${USER_DIR}"

      exec python3 main.py \
        --listen "${LISTEN_ADDR}" \
        --port "${PORT}" \
        --output-directory "${OUTPUT_DIR}" \
        --temp-directory "${TEMP_DIR}" \
        --input-directory "${INPUT_DIR}" \
        --user-directory "${USER_DIR}" \
        "$@"
